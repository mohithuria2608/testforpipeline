apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: auth-service
  labels:
    app: auth-service
  namespace: nodeapp
spec:
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: auth-service
        image: {{Auth_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
          name: api
        - containerPort: 50051
          name: grpc-auth
      nodeSelector:
        agentpool: amfuatnenp1


---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: auth-service
  ports:
  - protocol: TCP
    port: 4000
    targetPort: 4000

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-auth
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: auth-service
  ports:
  - protocol: TCP
    port: 50051
    targetPort: 50051

---

apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: user-service
  labels:
    app: user-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: user-service
        image: {{Users_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4001
        - containerPort: 50052
          name: grpc-user
      nodeSelector:
        agentpool: amfuatnenp1

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-user
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 50052
    targetPort: 50052
---

apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: menu-service
  labels:
    app: menu-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: menu-service
  template:
    metadata:
      labels:
        app: menu-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: menu-service
        image: {{Menu_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4002
        - containerPort: 50053
          name: grpc-menu
      nodeSelector:
        agentpool: amfuatnenp1

---
apiVersion: v1
kind: Service
metadata:
  name: menu-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: menu-service
  ports:
  - protocol: TCP
    port: 4002
    targetPort: 4002
---

apiVersion: v1
kind: Service
metadata:
  name: grpc-menu
  namespace: nodeapp
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: menu-service
  ports:
  - protocol: TCP
    port: 50053
    targetPort: 50053

---

apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: order-service
  labels:
    app: order-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: order-service
        image: {{Order_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4003
        - containerPort: 50054
          name: grpc-order
      nodeSelector:
        agentpool: amfuatnenp1

---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: order-service
  ports:
  - protocol: TCP
    port: 4003
    targetPort: 4003
---

apiVersion: v1
kind: Service
metadata:
  name: grpc-order
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: order-service
  ports:
  - protocol: TCP
    port: 50054
    targetPort: 50054
    
---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: deeplink-service
  labels:
    app: deeplink-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: deeplink-service
  template:
    metadata:
      labels:
        app: deeplink-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: deeplink-service
        image: {{Deeplink_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4005
          name: api
        - containerPort: 50056
          name: grpc-deeplink
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: deeplink-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: deeplink-service
  ports:
  - protocol: TCP
    port: 4005
    targetPort: 4005

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-deeplink
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: deeplink-service
  ports:
  - protocol: TCP
    port: 50056
    targetPort: 50056
---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: kafka-service
  labels:
    app: kafka-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: kafka-service
  template:
    metadata:
      labels:
        app: kafka-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: kafka-service
        image: {{Kafka_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4006
          name: api
        - containerPort: 50057
          name: grpc-kafka
      nodeSelector:
        agentpool: amfuatnenp1

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: kafka-service
  ports:
  - protocol: TCP
    port: 4006
    targetPort: 4006

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-kafka
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: kafka-service
  ports:
  - protocol: TCP
    port: 50057
    targetPort: 50057
---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: sync-service
  labels:
    app: sync-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: sync-service
  template:
    metadata:
      labels:
        app: sync-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: sync-service
        image: {{Sync_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4004
          name: api
        - containerPort: 50055
          name: grpc-sync
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: sync-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: sync-service
  ports:
  - protocol: TCP
    port: 4004
    targetPort: 4004

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-sync
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: sync-service
  ports:
  - protocol: TCP
    port: 50055
    targetPort: 50055
---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: location-service
  namespace: nodeapp
  labels:
    app: location-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: location-service
  template:
    metadata:
      labels:
        app: location-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: location-service
        image: {{Location_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4007
          name: api
        - containerPort: 50058
          name: grpc-location
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: location-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: location-service
  ports:
  - protocol: TCP
    port: 4007
    targetPort: 4007

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-location
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: location-service
  ports:
  - protocol: TCP
    port: 50058
    targetPort: 50058


---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: notification-service
  labels:
    app: notification-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: notification-service
        image: {{Notification_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4008
          name: api
        - containerPort: 50059
          name: grpc-location
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: notification-service
  ports:
  - protocol: TCP
    port: 4008
    targetPort: 4008

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-notification
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: notification-service
  ports:
  - protocol: TCP
    port: 50059
    targetPort: 50059

---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: payment-service
  labels:
    app: payment-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: payment-service
        image: {{Payment_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4009
          name: api
        - containerPort: 50060
          name: grpc-payment
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: payment-service
  ports:
  - protocol: TCP
    port: 4009
    targetPort: 4009

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-payment
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: payment-service
  ports:
  - protocol: TCP
    port: 50060
    targetPort: 50060
---    

apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: promotion-service
  labels:
    app: promotion-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: promotion-service
  template:
    metadata:
      labels:
        app: promotion-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: promotion-service
        image: {{Promotion_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4010
          name: api
        - containerPort: 50061
          name: grpc-promotion
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: promotion-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: promotion-service
  ports:
  - protocol: TCP
    port: 4010
    targetPort: 4010

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-promotion
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: promotion-service
  ports:
  - protocol: TCP
    port: 50061
    targetPort: 50061
---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: upload-service
  labels:
    app: upload-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: upload-service
  template:
    metadata:
      labels:
        app: upload-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: upload-service
        image: {{Upload_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4011
          name: api
        - containerPort: 50062
          name: grpc-upload
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: upload-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: upload-service
  ports:
  - protocol: TCP
    port: 4011
    targetPort: 4011

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-upload
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: upload-service
  ports:
  - protocol: TCP
    port: 50062
    targetPort: 50062
    
---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: log-service
  labels:
    app: log-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: log-service
  template:
    metadata:
      labels:
        app: log-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: log-service
        image: {{Log_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4012
          name: api
        - containerPort: 50063
          name: grpc-log
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: log-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: log-service
  ports:
  - protocol: TCP
    port: 4012
    targetPort: 4012

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-log
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: log-service
  ports:
  - protocol: TCP
    port: 50063
    targetPort: 50063
---

apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: home-service
  labels:
    app: home-service
  namespace: nodeapp
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: home-service
  template:
    metadata:
      labels:
        app: home-service
    spec:
      imagePullSecrets:
      - name: americanasecret
      containers:
      - name: home-service
        image: {{Home_image}}
        imagePullPolicy: Always
        ports:
        - containerPort: 4013
          name: api
        - containerPort: 50064
          name: grpc-auth
      nodeSelector:
        agentpool: amfuatnenp1
---
apiVersion: v1
kind: Service
metadata:
  name: home-service
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: home-service
  ports:
  - protocol: TCP
    port: 4013
    targetPort: 4013

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-home
  namespace: nodeapp
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: home-service
  ports:
  - protocol: TCP
    port: 50064
    targetPort: 50064