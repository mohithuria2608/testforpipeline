syntax = "proto3";
import "google/protobuf/any.proto";

service UserService {
    rpc Sync (IKafkaReq) returns (IKafkaRes) {}
    rpc FetchUser (IFetchUserReq) returns (IUserData) {}
    rpc FetchAddress (IFetchAddressReq) returns (IFetchAddressRes) {}
}

message IKafkaReq {
    required string set = 1;
    required IAerospike as = 2;
    required ICms cms = 3;
    required ISdm sdm = 4;
    required int32 count = 5;
}

message IAerospike {
    optional bool create = 1;
    optional bool update = 2;
    optional bool reset = 3;
    optional bool get = 4;
    required string argv = 5;
}

message ICms {
    optional bool create = 1;
    optional bool update = 2;
    optional bool reset = 3;
    optional bool get = 4;
    required string argv = 5;
}

message ISdm {
    optional bool create = 1;
    optional bool update = 2;
    optional bool reset = 3;
    optional bool get = 4;
    required string argv = 5;
}

message IKafkaRes {
    required string data = 1;
}

message IFetchUserReq {
    required string userId = 1;
}

message IUserData {
    required string id = 1;
    required int32 sdmUserRef = 2;
    required int32 cmsUserRef = 3;
    required bool isGuest = 4;
    required string name = 5;
    required string cCode = 6;
    required string phnNo = 7;
    required bool phnVerified = 8;
    required string email = 9;
    required bool emailVerified = 10;
    required int32 profileStep = 11;
    required string socialKey = 12;
    required string medium = 13;
    required int32 createdAt = 14;
}

message IFetchAddressReq {
    required string userId = 1;
    required string addressId = 2;
    required string bin = 3;
}

message IFetchAddressRes { 
    required string id = 1;
    required int32 sdmAddressRef = 2;
    required int32 cmsAddressRef = 3;
    required int32 sdmStoreRef = 4;
    required int32 tag = 5;
    required string bldgName = 6;
    required string description = 7;
    required string flatNum = 8;
    required string addressType = 9;
    required float lat = 10;
    required float lng = 11;
}